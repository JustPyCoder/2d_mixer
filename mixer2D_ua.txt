Початок роботи з mixeer2D. Ініціалізація та відображення екрану в командній строці.

	З почаику нам потрібно створити обєкт наприклад main_ecran.
	Далі присвоюємо обєкту клас Screen і передаємо туди список з розмірами екрану наприклад [16, 9] (знвчення вписуються від 1)(значення можна змінювати під свій лад, але тут ми будемо відштовхуватися від цього значення) 
	в символах і сам сивол наприклад '..'.
	Назва_змінної_екрану = Screen(Координати, символ)
	Це ми передали тільки параметри, тепер нам потрібно створити сам екран методом create_a_screen().
	Екран в пам'яті створено, щоб його побачити вводимо метод display_screen(), який друкує символи построково. Інколи краще використати метод
	display_screen_string(), бо він друкує все одним рядком і одночасно, тому якщо вам потрібна чікість картинки при частій зміні кадрів використайте краще його.Щоб при методі display_screen_string() екран було нормально видно, потрідно ввести розмір цьогож екрану аналогічним до розмірку командного вікна виводу і -1 символ по висоті. Для win.cmd при заводських параметрах це [160,29] при одиничному символі. Але в документації ми будемо розглядати тільки display_screen().
	Приклад коду нижче.

	----------

	from mixer2D import*
	
	main_screen = Screen([16, 9],'::')
	main_screen.create_a_screen()
	
	main_screen.display_screen()

	----------	
	
	::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::

	----------

Відрисовка символів на екрані згідно координат.

	Допустимо в нас є квадратний сисок координат в зімнній cords. щоб його вивести нвм потрібно скористатия функцією print_symbols(). 
	Передаэмо в неї координати і знак print_symbols(координати, символ). Тут рахуэмо з нуля.
	----------

	from mixer2D import*
	
	cords = [[5,1],[4,6],[9,8],[1,5],[0,0],[15,8]]

	main_screen = Screen([16, 9],'::')
	main_screen.create_a_screen()
	
	main_screen.print_symbols(cords, '██')

	main_screen.display_screen()

	----------
		
	██::::::::::::::::::::::::::::::
	::::::::::██::::::::::::::::::::
	::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::
	::██::::::::::::::::::::::::::::
	::::::::██::::::::::::::::::::::
	::::::::::::::::::::::::::::::::
	::::::::::::::::::██::::::::::██
	
	----------

	Але прописувати координати для якоїсь гіганської фігури недуже зручно. Тому для задання великий прямокутних фігур використовуємо функцію Figure.rectangle(Координати лівої верхньогої точки, координати правої нижньої точки) яка поверає значення координа для заповнення
	прямокутника. Їй потрібно передати списки координат лівого верхнього і правого нижнього знаку, щоб весь простір між ними був заповнений.
	Рахунок від 0. А також Стартове значення повинно буди меншим кінечного start_pos[0] > end_pos[0] і start_pos[1] > end_pos[1].
	Данний код зробе лінію по центру.

	----------

	from mixer2D import*
	
	main_screen = Screen([16, 9],'::')
	main_screen.create_a_screen()

	cords_groun = Figure.rectangle([0,3], [15,5])

	main_screen.print_symbols(cords_groun, '██')

	main_screen.display_screen()

	----------
		
	::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::
	████████████████████████████████
	████████████████████████████████
	████████████████████████████████
	::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::

	---------

Здвиг всього екрану і трохи логіки.

	Створюємо обєкт, далі присвоюємоо йому класс Logics і передаєм список координ для зздвину а також розміри нашого дисплею. Далі ми розглянемо використанні методів (logical_right,llogical_eft,logical_up,logical_down) наші координати здвиннаються на 1 (але можна і більтше просто передавши на скільки символів здвинути як параметр до методу) в заданому і відображає їз з іншого, якщо вони вийшли за межі заданого екрану. Є методи (right,left,up,down) які просто здвигають обєкт в певну сторону без його повертання з іншої.
	Приклад використання logical_right()

	----------

	import os
	import time
	from mixer2D import*
	
	cords = [[0,5],[1,5],[2,5],[3,5],[2,4],[2,6]]
	
	main_screen = Screen([16, 9],'::')
	msl = Logics([16,9])
	main_screen.create_a_screen()
	
	while True:
		os.system('cls') 
		main_screen.clear_a_screen()
		main_screen.print_symbols(cords, '██')
		main_screen.display_screen()
		time.sleep(0.2)
		cords = msl.logical_right(cords)

	----------

	Також можна перевірити, чи обєкт вийшов за певні рамки методами(border_up, border_down, border_left, border_right).
	Зараз ми зозлянемо це на прикладі border_left(). Він приймає обєкт-фігуг та повертає булеві значення. Якщо хоть на один символ фігура за межами екрана, то він поверне True інакше False.
	Приклад

	----------
	from mixer2D import*

	main_screen = Screen([16*3,9*3],' .')
	msl = Logics([16*3,9*3])
	main_screen.create_a_screen()
	
	fig = Figure.new_filled([[5,5],[9,17],[25,25]]) # Це ми розглянемо в майбутньому 
	
	fig = msl.left(fig,0)# здвиг
	
	main_screen.print_symbols(fig, '##')
	main_screen.display_screen()
	
	print(msl.border_left(fig))# переврка чи фігура не вийшла за межі

	----------
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::##::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::####::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::####::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::######::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::########::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::########::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::##########::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::############::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::############::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::##############::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::################::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::################::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::##################::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::################::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::##############::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::##############::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::############::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::########::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::######::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::######::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::####::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	False # бо в межах 
	----------

	main_screen = Screen([16*3,9*3],' .')
	msl = Logics([16*3,9*3])
	main_screen.create_a_screen()
	
	fig = Figure.new_filled([[5,5],[9,17],[25,25]]) # Це ми розглянемо в майбутньому 
	
	fig = msl.left(fig,10)# додамо 10
	
	main_screen.print_symbols(fig, '##')
	main_screen.display_screen()
	
	print(msl.border_left(fig))# переврка чи фігура не вийшла за межі

	----------
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	##::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	####::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	######::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	########::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	##########::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	############::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	##############::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	################::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::################::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::##############::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::##############::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::############::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::########::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::######::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::######::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::####::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	True # бо вийшла за межі
	----------

Повортот фігури під певним кутом 

	Бувають такі ситуації коли потрібно фігуру поеврнути. Для такис ситуацій є метод turn() класу Figure. 
	Метод turn() приймає фігуру і градуси під якими її повернути, а повертає нові координати наприклад cords_symvols = Figure.turn(фгура, кут, точка выдносно якої буде повернута фігура). По замовчуванням координаи повороту становлять [0,0]

	Перший екран - це звичайна фігура, а другий - фігура під кутом 45°
	----------

	from mixer2D import*
	
	main_screen = Screen([16*2,9*2],'::')
	main_screen.create_a_screen()
	
	cut = 0
	
	cords_symvols_start = Figure.rectangle([10,7],[20,12])
	cords_symvols = Figure.turn(cords_symvols_start, 45,[15,10])
	
	main_screen.print_symbols(cords_symvols_start, "██")
	main_screen.display_screen()
	print(0)
	main_screen.clear_a_screen()
	main_screen.print_symbols(cords_symvols, "██")
	main_screen.display_screen()

	----------
	
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::██████████████████████::::::::::::::::::::::
	::::::::::::::::::::██████████████████████::::::::::::::::::::::
	::::::::::::::::::::██████████████████████::::::::::::::::::::::
	::::::::::::::::::::██████████████████████::::::::::::::::::::::
	::::::::::::::::::::██████████████████████::::::::::::::::::::::
	::::::::::::::::::::██████████████████████::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	0
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::██::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::████::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::████████████::::::::::::::::::::::::::::::
	::::::::::::::::::::::████::██████::::::::::::::::::::::::::::::
	::::::::::::::::::::████::████::████::::::::::::::::::::::::::::
	::::::::::::::::::::::██████████████████::::::::::::::::::::::::
	::::::::::::::::::::::::██::██████::████::::::::::::::::::::::::
	::::::::::::::::::::::::::██████████████████::::::::::::::::::::
	::::::::::::::::::::::::::::██::████::████::::::::::::::::::::::
	::::::::::::::::::::::::::::::████::████::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::████████::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::██::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	
		----------
	
Створення кола

	Можливість створення кола може бути необхідним в деяких випадках. Його можна створити методом circle() того ж самого класу Figure().
	Метод приймає радіус кола і координати його центру. circle(радіус, координати, кут скільки малювати коло). По замовчуванням кут це 360°.
	Приклад нижче.

	----------

	from mixer2D import*
	
	main_screen = Screen([16*2,9*2],'::')
	main_screen.create_a_screen()
	
	
	test = Figure.circle(4, [15,8])
	
	main_screen.print_symbols(test, "██")
	main_screen.display_screen()

	----------

	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::██████████::::::::::::::::::::::::::::
	::::::::::::::::::::::::████::::::████::::::::::::::::::::::::::
	::::::::::::::::::::::████::::::::::████::::::::::::::::::::::::
	::::::::::::::::::::::██::::::::::::::██::::::::::::::::::::::::
	::::::::::::::::::::::██::::::::::::::██::::::::::::::::::::::::
	::::::::::::::::::::::██::::::::::::::██::::::::::::::::::::::::
	::::::::::::::::::::::████::::::::::████::::::::::::::::::::::::
	::::::::::::::::::::::::████::::::████::::::::::::::::::::::::::
	::::::::::::::::::::::::::██████████::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

	----------

	Також є метод circle_filled() який робе круг. Приймає в себе ті ж самі параметри 

	----------

	from mixer2D import*
	
	main_screen = Screen([16*2,9*2],'::')
	main_screen.create_a_screen()
	
	
	test = Figure.circle_filled(7, [15,8])
	
	main_screen.print_symbols(test, "██")
	main_screen.display_screen()

	----------

	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::██████████::::::::::::::::::::::::::::
	::::::::::::::::::::::██████████████████::::::::::::::::::::::::
	::::::::::::::::::::██████████████████████::::::::::::::::::::::
	::::::::::::::::::::██████████████████████::::::::::::::::::::::
	::::::::::::::::::██████████████████████████::::::::::::::::::::
	::::::::::::::::::██████████████████████████::::::::::::::::::::
	::::::::::::::::::██████████████████████████::::::::::::::::::::
	::::::::::::::::::██████████████████████████::::::::::::::::::::
	::::::::::::::::::██████████████████████████::::::::::::::::::::
	::::::::::::::::::::██████████████████████::::::::::::::::::::::
	::::::::::::::::::::██████████████████████::::::::::::::::::::::
	::::::::::::::::::::::██████████████████::::::::::::::::::::::::
	::::::::::::::::::::::::::██████████::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::


	----------

	Тепер ми спробуємо намалювати півколо і півкуг. Просто в методи задамо параметр кута 180°.

	----------

	from mixer2D import*

	main_screen = Screen([16*2,9*2],'::')
	main_screen.create_a_screen()
	
	
	test = Figure.circle(4, [15,8],180)
	
	main_screen.print_symbols(test, "██")
	main_screen.display_screen()
	----------
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::██::::::::::::::██::::::::::::::::::::::::
	::::::::::::::::::::::██::::::::::::::██::::::::::::::::::::::::
	::::::::::::::::::::::████::::::::::████::::::::::::::::::::::::
	::::::::::::::::::::::::████::::::████::::::::::::::::::::::::::
	::::::::::::::::::::::::::██████████::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	----------
	І для кругаю
	----------

	from mixer2D import*
	
	main_screen = Screen([16*2,9*2],'::')
	main_screen.create_a_screen()
	
	
	test = Figure.circle_filled(7, [15,8],180)
	
	main_screen.print_symbols(test, "██")
	main_screen.display_screen()

	----------
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::██████████████████████████████::::::::::::::::::
	::::::::::::::::██████████████████████████████::::::::::::::::::
	::::::::::::::::██████████████████████████████::::::::::::::::::
	::::::::::::::::██████████████████████████████::::::::::::::::::
	::::::::::::::::::██████████████████████████::::::::::::::::::::
	::::::::::::::::::::██████████████████████::::::::::::::::::::::
	::::::::::::::::::::::██████████████████::::::::::::::::::::::::
	::::::::::::::::::::::::██████████████::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	----------

Вектори

	Створення векторів дуже корисне в різних ситуаціях. Для його проектування нам знадобится метод vector() класу Figure. Даний метод приймає два списки, а сааме посаткові і кінечні координати. вони можуть подаватися в різний послідовності.
	Приклад нижче.

	----------

	from mixer2D import*
	
	main_screen = Screen([16*2,9*2],'::')
	main_screen.create_a_screen()
	
	vector_1 = Figure.vector([25,15],[5,5])
	
	main_screen.print_symbols(vector_1, "██")
	
	main_screen.display_screen()
	
	

	----------

	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::████::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::██████::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::██████::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::██████::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::██████::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::██████::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::██████::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::██████::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::██████::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::██████::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::████::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

	----------

	На основі векторів було створено метод new того ж класу. Він приймає в себе список довільного розміру з координатами точок на екрані і послідовно зєднує їх векторами.

	----------
	
	from mixer2D import*
	
	main_screen = Screen([16*2,9*2],'::')
	main_screen.create_a_screen()
	
	triangle_1 = Figure.new([[5,5],[10,2],[17,15]])
	
	main_screen.print_symbols(triangle_1, "██")
	main_screen.display_screen()
	
	----------

	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::████::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::████████::::::::::::::::::::::::::::::::::::::::
	::::::::::::████::::::██::::::::::::::::::::::::::::::::::::::::
	::::::::::████::::::::████::::::::::::::::::::::::::::::::::::::
	::::::::::::████::::::::██::::::::::::::::::::::::::::::::::::::
	::::::::::::::████::::::████::::::::::::::::::::::::::::::::::::
	::::::::::::::::████::::::██::::::::::::::::::::::::::::::::::::
	::::::::::::::::::████::::::██::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::████::████::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::████::██::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::████████::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::██████::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::██████::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::██::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	
	----------

	Аналогачно з колом вашу фігуру можна зафарбувати. Для цього є мотод Figure.new_filled().

	----------

	from mixer2D import*

	main_screen = Screen([16*2,9*2],'::')
	main_screen.create_a_screen()
	
	triangle_1 = Figure.new_filled([[5,5],[10,2],[17,15]])
	
	main_screen.print_symbols(triangle_1, "██")
	main_screen.display_screen()
	
	----------

	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::████::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::████████::::::::::::::::::::::::::::::::::::::::
	::::::::::::████████████::::::::::::::::::::::::::::::::::::::::
	::::::::::████████████████::::::::::::::::::::::::::::::::::::::
	::::::::::::██████████████::::::::::::::::::::::::::::::::::::::
	::::::::::::::██████████████::::::::::::::::::::::::::::::::::::
	::::::::::::::::████████████::::::::::::::::::::::::::::::::::::
	::::::::::::::::::████████████::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::██████████::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::████████::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::████████::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::██████::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::██████::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::██::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::