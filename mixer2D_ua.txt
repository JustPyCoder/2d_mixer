Початок роботи з mixeer2D. Ініціалізація та відображення екрану в командній строці.

	З почаику нам потрібно створити обєкт наприклад main_ecran.
	Далі присвоюємо обєкту клас Ecran і передаємо туди список з розмірами екрану наприклад [16, 9] (знвчення вписуються від 1)(значення можна змінювати під свій лад, але тут ми будемо відштовхуватися від цього значення) 
	в символах і сам сивол наприклад '..'.
	Це ми передали тільки параметри, тепер нам потрібно створити сам екран методом plase_ecran().
	Екран в пам'яті створено, щоб його побачити вводимо метод print_ecran(). Приклад коду нижче.

	----------

	from mixer2D import*
	
	main_ecran = Ecran([16, 9],'..')
	main_ecran.plase_ecran()
	
	main_ecran.print_ecran()

	----------
	
	................................
	................................
	................................
	................................
	................................
	................................
	................................
	................................
	................................

	----------

Відрисовка символів на екрані згідно координат.

	Допустимо в нас є квадратний сисок координат в зімнній cords. щоб його вивести нвм потрібно скористатия функцією plase_sign(). 
	Передаэмо в неї координати і знак plase_sign(cords, '##'). Тут рахуэмо з нуля.

	----------

	from mixer2D import*
	
	cords = [[5,1],[4,6],[9,8],[1,5],[0,0],[15,8]]

	main_ecran = Ecran([16, 9],'..')
	main_ecran.plase_ecran()
	
	main_ecran.plase_sign(cords, '##')

	main_ecran.print_ecran()

	----------

	##..............................
	..........##....................
	................................
	................................
	................................
	..##............................
	........##......................
	................................
	..................##..........##

	----------

	Але прописувати координати для якоїсь гіганської фігури недуже зручно. Тому для задання великий фігур використовуємо функцію Figure.rectangle() яка поверає значення координа для заповнення
	прямокутника. Їй потрібно передати списки координат лівого верхнього і правого нижнього знаку, щоб весь простір між ними був заповнений.
	Рахунок від 0. А також Стартове значення повинно буди меншим кінечного start_pos[0] > end_pos[0] і start_pos[1] > end_pos[1].
	Данний код зробе лінію по центру.

	----------

	from mixer2D import*
	
	main_ecran = Ecran([16, 9],'..')
	main_ecran.plase_ecran()
	
	cords_groun = Figure.rectangle([0,3], [15,5])
	
	print(cords_groun)
	
	main_ecran.plase_sign(cords_groun, '##')
	
	main_ecran.print_ecran()

	----------

	................................
	................................
	................................
	################################
	################################
	################################
	................................
	................................
	................................

	---------

Здвиг всього екрану 

	Створюємо обєкт, далі присвоюємоо йому класс Logics і передаєм список координ для зздвину а також розміри нашого дисплею. Далі при використанні метода logical_right() 
	наші координати здвиннаються на 1 в право. Цей метод повертає їх.
	Приклад використання Logics()

	----------

	import os
	import time
	from mixer2D import*
	
	cords = [[0,5],[1,5],[2,5],[3,5],[2,4],[2,6]]
	
	main_ecran = Ecran([16, 9],'..')
	main_ecran.plase_ecran()
	
	left = Logics(cords, [16,9])
	
	while True:
		os.system('cls') 
		main_ecran.plase_ecran()
		main_ecran.plase_sign(cords, '**')
		main_ecran.print_ecran()
		time.sleep(0.2)
		cords = left.logical_right()